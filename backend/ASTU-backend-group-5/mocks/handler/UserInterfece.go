// Code generated by mockery v2.44.2. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// UserInterfece is an autogenerated mock type for the UserInterfece type
type UserInterfece struct {
	mock.Mock
}

// Login provides a mock function with given fields: c
func (_m *UserInterfece) Login(c *gin.Context) {
	_m.Called(c)
}

// Register provides a mock function with given fields: c
func (_m *UserInterfece) Register(c *gin.Context) {
	_m.Called(c)
}

// RequestVerifyEmail provides a mock function with given fields: c
func (_m *UserInterfece) RequestVerifyEmail(c *gin.Context) {
	_m.Called(c)
}

// ResetPassword provides a mock function with given fields: c
func (_m *UserInterfece) ResetPassword(c *gin.Context) {
	_m.Called(c)
}

// ResetPasswordRequest provides a mock function with given fields: c
func (_m *UserInterfece) ResetPasswordRequest(c *gin.Context) {
	_m.Called(c)
}

// VerifyEmail provides a mock function with given fields: c
func (_m *UserInterfece) VerifyEmail(c *gin.Context) {
	_m.Called(c)
}

// NewUserInterfece creates a new instance of UserInterfece. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserInterfece(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserInterfece {
	mock := &UserInterfece{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
