apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-app
  labels:
    io.kompose.service: blog-app
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: blog-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: blog-app
    spec:
      containers:
        - name: blog-app
          image: solo1221/blog-app:v0.1
          ports:
            - containerPort: 8081
          env:
            - name: ACCESS_TOKEN_EXPIRY_HOUR
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: ACCESS_TOKEN_EXPIRY_HOUR
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: BASE_URL
            - name: CONTEXT_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: CONTEXT_TIMEOUT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: DB_NAME
            - name: GEMINI_API_KEY
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: GEMINI_API_KEY
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: JWT_SECRET
            - name: MONGO_URI
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: MONGO_URI
            - name: REDIS_BLOG_KEY
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: REDIS_BLOG_KEY
            - name: REDIS_DB
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: REDIS_DB
            - name: REDIS_DB_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: REDIS_DB_ADDRESS
            - name: REDIS_DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: REDIS_DB_PASSWORD
            - name: REFRESH_TOKEN_EXPIRY_HOUR
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: REFRESH_TOKEN_EXPIRY_HOUR
            - name: SERVER_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: SERVER_ADDRESS
            - name: SMTP_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: SMTP_PASSWORD
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: SMTP_PORT
            - name: SMTP_SERVER
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: SMTP_SERVER
            - name: SMTP_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: SMTP_USERNAME
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "256Mi"
              cpu: "1000m"
      restartPolicy: Always
