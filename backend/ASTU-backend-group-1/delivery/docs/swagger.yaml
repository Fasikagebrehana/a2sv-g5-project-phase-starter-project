definitions:
  domain.User:
    description: User model
    properties:
      email:
        type: string
      expirationtoken:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_admin:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  termsOfService: http://swagger.io/terms/
  title: TODO APIs
  version: "1.0"
paths:
  /users:
    get:
      description: Retrieves users by optional username or email query
      parameters:
      - description: Username
        in: query
        name: username
        type: string
      - description: Email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "404":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get users
      tags:
      - users
  /users/{id}:
    delete:
      description: Deletes a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete user
      tags:
      - users
    get:
      description: Retrieves a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/domain.User'
        "404":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates user information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: Updated user data
          schema:
            $ref: '#/definitions/domain.User'
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user
      tags:
      - users
  /users/{uid}/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using the refresh token
      parameters:
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      - description: Password
        in: body
        name: pwd
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: refreshed access token
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh access token
      tags:
      - users
  /users/accountVerification:
    get:
      description: Verifies a user account using email and token
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify account
      tags:
      - users
  /users/demote/{username}:
    post:
      description: Demotes a user to regular user by username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Demote user
      tags:
      - users
  /users/demoteByEmail/{email}:
    post:
      description: Demotes a user to regular user by email
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Demote user by email
      tags:
      - users
  /users/forgetPassword:
    get:
      description: Sends a password reset token to the user's email
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Forget password
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Sends a password reset token to the user's email (alternative method)
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Forget password (alternative)
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT access token
      parameters:
      - description: Login info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: access_token
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - users
  /users/promote/{username}:
    post:
      description: Promotes a user to admin by username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Promote user
      tags:
      - users
  /users/promoteByEmail/{email}:
    post:
      description: Promotes a user to admin by email
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Promote user by email
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "201":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
  /users/resetPassword:
    post:
      consumes:
      - application/json
      description: Resets the user's password using the token
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Reset token
        in: query
        name: token
        required: true
        type: string
      - description: New password info
        in: body
        name: newPassword
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "406":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset password
      tags:
      - users
securityDefinitions:
  JWT:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
