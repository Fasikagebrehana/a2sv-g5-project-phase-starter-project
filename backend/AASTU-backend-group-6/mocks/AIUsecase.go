// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	domain "blogs/Domain"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// AIUsecase is an autogenerated mock type for the AIUsecase type
type AIUsecase struct {
	mock.Mock
}

// AskAI provides a mock function with given fields: c, request
func (_m *AIUsecase) AskAI(c context.Context, request domain.AiRequest) interface{} {
	ret := _m.Called(c, request)

	if len(ret) == 0 {
		panic("no return value specified for AskAI")
	}

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(context.Context, domain.AiRequest) interface{}); ok {
		r0 = rf(c, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// NewAIUsecase creates a new instance of AIUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAIUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *AIUsecase {
	mock := &AIUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
