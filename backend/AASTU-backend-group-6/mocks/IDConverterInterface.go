// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// IDConverterInterface is an autogenerated mock type for the IDConverterInterface type
type IDConverterInterface struct {
	mock.Mock
}

// ToObjectID provides a mock function with given fields: id
func (_m *IDConverterInterface) ToObjectID(id string) primitive.ObjectID {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for ToObjectID")
	}

	var r0 primitive.ObjectID
	if rf, ok := ret.Get(0).(func(string) primitive.ObjectID); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(primitive.ObjectID)
		}
	}

	return r0
}

// ToString provides a mock function with given fields: id
func (_m *IDConverterInterface) ToString(id primitive.ObjectID) string {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for ToString")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(primitive.ObjectID) string); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewIDConverterInterface creates a new instance of IDConverterInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIDConverterInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *IDConverterInterface {
	mock := &IDConverterInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
