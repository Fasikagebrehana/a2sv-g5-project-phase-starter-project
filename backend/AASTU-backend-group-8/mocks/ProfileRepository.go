// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	domain "meleket/domain"

	mock "github.com/stretchr/testify/mock"
)

// ProfileRepository is an autogenerated mock type for the ProfileRepository type
type ProfileRepository struct {
	mock.Mock
}

// DeleteProfile provides a mock function with given fields: userID
func (_m *ProfileRepository) DeleteProfile(userID string) error {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for DeleteProfile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindProfile provides a mock function with given fields: userID
func (_m *ProfileRepository) FindProfile(userID string) (*domain.Profile, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for FindProfile")
	}

	var r0 *domain.Profile
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*domain.Profile, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) *domain.Profile); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Profile)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveProfile provides a mock function with given fields: _a0
func (_m *ProfileRepository) SaveProfile(_a0 *domain.Profile) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SaveProfile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Profile) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateProfile provides a mock function with given fields: _a0
func (_m *ProfileRepository) UpdateProfile(_a0 *domain.Profile) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for UpdateProfile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Profile) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewProfileRepository creates a new instance of ProfileRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProfileRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProfileRepository {
	mock := &ProfileRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
