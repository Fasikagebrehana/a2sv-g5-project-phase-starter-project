// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// RefreshTokenUsecaseInterface is an autogenerated mock type for the RefreshTokenUsecaseInterface type
type RefreshTokenUsecaseInterface struct {
	mock.Mock
}

// DeleteRefreshToken provides a mock function with given fields: userID
func (_m *RefreshTokenUsecaseInterface) DeleteRefreshToken(userID primitive.ObjectID) error {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for DeleteRefreshToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(primitive.ObjectID) error); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RefreshToken provides a mock function with given fields: userID, role
func (_m *RefreshTokenUsecaseInterface) RefreshToken(userID primitive.ObjectID, role string) (string, error) {
	ret := _m.Called(userID, role)

	if len(ret) == 0 {
		panic("no return value specified for RefreshToken")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(primitive.ObjectID, string) (string, error)); ok {
		return rf(userID, role)
	}
	if rf, ok := ret.Get(0).(func(primitive.ObjectID, string) string); ok {
		r0 = rf(userID, role)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(primitive.ObjectID, string) error); ok {
		r1 = rf(userID, role)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRefreshTokenUsecaseInterface creates a new instance of RefreshTokenUsecaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRefreshTokenUsecaseInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *RefreshTokenUsecaseInterface {
	mock := &RefreshTokenUsecaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
