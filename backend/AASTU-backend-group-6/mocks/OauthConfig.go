// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	oauth2 "golang.org/x/oauth2"
)

// OauthConfig is an autogenerated mock type for the OauthConfig type
type OauthConfig struct {
	mock.Mock
}

// InitialConfig provides a mock function with given fields:
func (_m *OauthConfig) InitialConfig() (*oauth2.Config, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for InitialConfig")
	}

	var r0 *oauth2.Config
	var r1 error
	if rf, ok := ret.Get(0).(func() (*oauth2.Config, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *oauth2.Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*oauth2.Config)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOauthConfig creates a new instance of OauthConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOauthConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *OauthConfig {
	mock := &OauthConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
