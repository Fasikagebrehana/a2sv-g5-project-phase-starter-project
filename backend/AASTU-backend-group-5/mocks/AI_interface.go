// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// AI_interface is an autogenerated mock type for the AI_interface type
type AI_interface struct {
	mock.Mock
}

// GenerateContentFromGemini provides a mock function with given fields: title, description
func (_m *AI_interface) GenerateContentFromGemini(title string, description string) (string, error) {
	ret := _m.Called(title, description)

	if len(ret) == 0 {
		panic("no return value specified for GenerateContentFromGemini")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (string, error)); ok {
		return rf(title, description)
	}
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(title, description)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(title, description)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAI_interface creates a new instance of AI_interface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAI_interface(t interface {
	mock.TestingT
	Cleanup(func())
}) *AI_interface {
	mock := &AI_interface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
