// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	domain "blog_g2/domain"

	mock "github.com/stretchr/testify/mock"
)

// AIService is an autogenerated mock type for the AIService type
type AIService struct {
	mock.Mock
}

// GeneratePost provides a mock function with given fields: title, description
func (_m *AIService) GeneratePost(title string, description string) (*domain.PostResponse, error) {
	ret := _m.Called(title, description)

	if len(ret) == 0 {
		panic("no return value specified for GeneratePost")
	}

	var r0 *domain.PostResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*domain.PostResponse, error)); ok {
		return rf(title, description)
	}
	if rf, ok := ret.Get(0).(func(string, string) *domain.PostResponse); ok {
		r0 = rf(title, description)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.PostResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(title, description)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAIService creates a new instance of AIService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAIService(t interface {
	mock.TestingT
	Cleanup(func())
}) *AIService {
	mock := &AIService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
