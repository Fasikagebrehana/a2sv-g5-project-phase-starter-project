// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	domain "blog_api/domain"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// BlogUseCaseInterface is an autogenerated mock type for the BlogUseCaseInterface type
type BlogUseCaseInterface struct {
	mock.Mock
}

// AddComment provides a mock function with given fields: ctx, blogID, newComment, username
func (_m *BlogUseCaseInterface) AddComment(ctx context.Context, blogID string, newComment *domain.NewComment, username string) domain.CodedError {
	ret := _m.Called(ctx, blogID, newComment, username)

	if len(ret) == 0 {
		panic("no return value specified for AddComment")
	}

	var r0 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, string, *domain.NewComment, string) domain.CodedError); ok {
		r0 = rf(ctx, blogID, newComment, username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CodedError)
		}
	}

	return r0
}

// CreateBlogPost provides a mock function with given fields: ctx, blog, createdBy
func (_m *BlogUseCaseInterface) CreateBlogPost(ctx context.Context, blog *domain.NewBlog, createdBy string) domain.CodedError {
	ret := _m.Called(ctx, blog, createdBy)

	if len(ret) == 0 {
		panic("no return value specified for CreateBlogPost")
	}

	var r0 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, *domain.NewBlog, string) domain.CodedError); ok {
		r0 = rf(ctx, blog, createdBy)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CodedError)
		}
	}

	return r0
}

// DeleteBlogPost provides a mock function with given fields: ctx, id, deletedBy
func (_m *BlogUseCaseInterface) DeleteBlogPost(ctx context.Context, id string, deletedBy string) domain.CodedError {
	ret := _m.Called(ctx, id, deletedBy)

	if len(ret) == 0 {
		panic("no return value specified for DeleteBlogPost")
	}

	var r0 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, string, string) domain.CodedError); ok {
		r0 = rf(ctx, id, deletedBy)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CodedError)
		}
	}

	return r0
}

// DeleteComment provides a mock function with given fields: ctx, blogID, commentID, username
func (_m *BlogUseCaseInterface) DeleteComment(ctx context.Context, blogID string, commentID string, username string) domain.CodedError {
	ret := _m.Called(ctx, blogID, commentID, username)

	if len(ret) == 0 {
		panic("no return value specified for DeleteComment")
	}

	var r0 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) domain.CodedError); ok {
		r0 = rf(ctx, blogID, commentID, username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CodedError)
		}
	}

	return r0
}

// EditBlogPost provides a mock function with given fields: ctx, id, blog, editedBy
func (_m *BlogUseCaseInterface) EditBlogPost(ctx context.Context, id string, blog *domain.NewBlog, editedBy string) domain.CodedError {
	ret := _m.Called(ctx, id, blog, editedBy)

	if len(ret) == 0 {
		panic("no return value specified for EditBlogPost")
	}

	var r0 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, string, *domain.NewBlog, string) domain.CodedError); ok {
		r0 = rf(ctx, id, blog, editedBy)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CodedError)
		}
	}

	return r0
}

// GenerateBlogContent provides a mock function with given fields: topics
func (_m *BlogUseCaseInterface) GenerateBlogContent(topics []string) (string, error) {
	ret := _m.Called(topics)

	if len(ret) == 0 {
		panic("no return value specified for GenerateBlogContent")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func([]string) (string, error)); ok {
		return rf(topics)
	}
	if rf, ok := ret.Get(0).(func([]string) string); ok {
		r0 = rf(topics)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(topics)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GenerateTrendingTopics provides a mock function with given fields: keywords
func (_m *BlogUseCaseInterface) GenerateTrendingTopics(keywords []string) ([]string, error) {
	ret := _m.Called(keywords)

	if len(ret) == 0 {
		panic("no return value specified for GenerateTrendingTopics")
	}

	var r0 []string
	var r1 error
	if rf, ok := ret.Get(0).(func([]string) ([]string, error)); ok {
		return rf(keywords)
	}
	if rf, ok := ret.Get(0).(func([]string) []string); ok {
		r0 = rf(keywords)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(keywords)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBlogPostByID provides a mock function with given fields: ctx, id
func (_m *BlogUseCaseInterface) GetBlogPostByID(ctx context.Context, id string) (*domain.Blog, domain.CodedError) {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for GetBlogPostByID")
	}

	var r0 *domain.Blog
	var r1 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, string) (*domain.Blog, domain.CodedError)); ok {
		return rf(ctx, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *domain.Blog); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Blog)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) domain.CodedError); ok {
		r1 = rf(ctx, id)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(domain.CodedError)
		}
	}

	return r0, r1
}

// GetBlogPosts provides a mock function with given fields: ctx, filters
func (_m *BlogUseCaseInterface) GetBlogPosts(ctx context.Context, filters domain.BlogFilterOptions) ([]domain.Blog, int, domain.CodedError) {
	ret := _m.Called(ctx, filters)

	if len(ret) == 0 {
		panic("no return value specified for GetBlogPosts")
	}

	var r0 []domain.Blog
	var r1 int
	var r2 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, domain.BlogFilterOptions) ([]domain.Blog, int, domain.CodedError)); ok {
		return rf(ctx, filters)
	}
	if rf, ok := ret.Get(0).(func(context.Context, domain.BlogFilterOptions) []domain.Blog); ok {
		r0 = rf(ctx, filters)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Blog)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, domain.BlogFilterOptions) int); ok {
		r1 = rf(ctx, filters)
	} else {
		r1 = ret.Get(1).(int)
	}

	if rf, ok := ret.Get(2).(func(context.Context, domain.BlogFilterOptions) domain.CodedError); ok {
		r2 = rf(ctx, filters)
	} else {
		if ret.Get(2) != nil {
			r2 = ret.Get(2).(domain.CodedError)
		}
	}

	return r0, r1, r2
}

// ReviewBlogContent provides a mock function with given fields: blogContent
func (_m *BlogUseCaseInterface) ReviewBlogContent(blogContent string) (string, error) {
	ret := _m.Called(blogContent)

	if len(ret) == 0 {
		panic("no return value specified for ReviewBlogContent")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(blogContent)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(blogContent)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(blogContent)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TrackBlogPopularity provides a mock function with given fields: ctx, blogId, action, state, username
func (_m *BlogUseCaseInterface) TrackBlogPopularity(ctx context.Context, blogId string, action string, state bool, username string) domain.CodedError {
	ret := _m.Called(ctx, blogId, action, state, username)

	if len(ret) == 0 {
		panic("no return value specified for TrackBlogPopularity")
	}

	var r0 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, string, string, bool, string) domain.CodedError); ok {
		r0 = rf(ctx, blogId, action, state, username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CodedError)
		}
	}

	return r0
}

// UpdateComment provides a mock function with given fields: ctx, blogID, commentID, comment, username
func (_m *BlogUseCaseInterface) UpdateComment(ctx context.Context, blogID string, commentID string, comment *domain.NewComment, username string) domain.CodedError {
	ret := _m.Called(ctx, blogID, commentID, comment, username)

	if len(ret) == 0 {
		panic("no return value specified for UpdateComment")
	}

	var r0 domain.CodedError
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *domain.NewComment, string) domain.CodedError); ok {
		r0 = rf(ctx, blogID, commentID, comment, username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CodedError)
		}
	}

	return r0
}

// NewBlogUseCaseInterface creates a new instance of BlogUseCaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBlogUseCaseInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *BlogUseCaseInterface {
	mock := &BlogUseCaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
